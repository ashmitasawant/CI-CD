name: Deployment Pipeline

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  getProcessIds:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    outputs:
      output1: ${{ steps.setComponentId.outputs.componentID }}


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get ComponentId
        uses: actions/checkout@v2
      - id: setComponentId
        run: |
            ProcessDetails=$(cat ./ProcessDetails.json)
            componentId=$(echo  ${ProcessDetails} | jq '.[0].componentID')
            echo "::set-output name=componentID::$componentId"
  
            
  createPackage:
    
    environment: Dev
    env: 
      MY_USERNAME: ${{ secrets.MY_USERNAME }}
      MY_PASSWORD: ${{ secrets.MY_PASSWORD }}
     
    runs-on: ubuntu-latest
    outputs:
      output2: ${{ steps.response.outputs.packageId }}
    needs: getProcessIds
    steps:
     - name: SetVariables
       id: showVariable
       run:   echo ${{needs.getProcessIds.outputs.output1}}
       
     - name: Package Creation
       id: packageCreation
       uses: fjogeleit/http-request-action@master
       with:
        url: 'https://api.boomi.com/api/rest/v1/trainingashmitasawant-D9P8J7/PackagedComponent'
        method: 'POST'
        contentType: 'application/json'
        customHeaders: '{"accept": "application/json"}'
        data: '{"componentId": ${{needs.getProcessIds.outputs.output1}},"packageVersion":"v1.04", "notes":"Package for deployment" }'
        username: ${{env.MY_USERNAME}}
        password: ${{env.MY_PASSWORD}}
        
     - name: Show Response
       id: response
       run: |
            packageID=$(echo ${{ toJSON(steps.packageCreation.outputs.response) }} | jq ".packageId")
            echo "::set-output name=packageId::$packageID"
            
        
  pushPackageIds:

      runs-on: ubuntu-latest    
      needs: createPackage
      steps:
        - uses: actions/checkout@v2
        - name: pushPackageIds
          id: packageId
          run: |
               echo ${{needs.createPackage.outputs.output2}} 
               echo ${{needs.createPackage.outputs.output2}} >> PackageIds.txt
               git config user.name ashmitasawant
               git config user.email ashmitasawant3@gmail.com
               git add .
               git commit -m "Published Changes"
               git push
       
  deployPackage: 
   environment: Dev
   env: 
        MY_USERNAME: ${{ secrets.MY_USERNAME }}
        MY_PASSWORD: ${{ secrets.MY_PASSWORD }}
   runs-on: ubuntu-latest    
   needs: createPackage    
   steps:     
     - name: Package Deploy
       id: packageDeploy
       uses: fjogeleit/http-request-action@master
       with:
         url: 'https://api.boomi.com/api/rest/v1/trainingashmitasawant-D9P8J7/DeployedPackage'
         method: 'POST'
         contentType: 'application/json'
         customHeaders: '{"accept": "application/json"}'
         data: '{"environmentId": "5d9c830c-1f65-4fed-b7ef-fdbbbaf7d259","packageId": ${{needs.createPackage.outputs.output2}}}'
         username: ${{env.MY_USERNAME}}
         password: ${{env.MY_PASSWORD}}
           
     - name: Show Response
       id: response
       run: |
            response=$(echo ${{ toJSON(steps.packageDeploy.outputs.response) }})
            echo $response
  
  
  processExecution:
   environment: Dev
   env: 
        APIHIT_USERNAME: ${{ secrets.APIHIT_USERNAME }}
        APIHIT_PASSWORD: ${{ secrets.APIHIT_PASSWORD }}
   runs-on: ubuntu-latest    
   needs: deployPackage   
   steps:     
     - name: Process Execution
       id: processExecution
       uses: fjogeleit/http-request-action@master
       with:
         url: 'https://c01-sg.integrate.boomi.com/ws/rest/personDetails/v1/personDetails/'
         method: 'POST'
         contentType: 'application/json'
         customHeaders: '{"accept": "application/json"}'
         data: ' {"name":"Ashmita", "age":18,"role":"Software Engineer"}'
         username: ${{env.APIHIT_USERNAME}}
         password: ${{env.APIHIT_PASSWORD}}
         
    
