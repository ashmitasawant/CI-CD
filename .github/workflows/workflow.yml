name: Deployment Pipeline

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  getProcessDetails:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get ComponentId
        uses: actions/checkout@v2
      - id: set-componentId
        run: |
            ProcessDetails=$(cat ./ProcessDetails.json)
            echo $ProcessDetails | jq '.[0].componentID'
      - name: Show ComponentId
        uses: actions/checkout@v2
      - id: show-componentId
        env: 
           componentId: ${{steps.set-componentId.outputs.response}}
        run: echo $componentId
      
            
      
  createPackage:
    needs: getProcessDetails
    runs-on: ubuntu-latest

    
    environment: Dev
    env: 
      BOOMI_USERNAME: ${{ secrets.BOOMI_USERNAME }}
      BOOMI_PASSWORD: ${{ secrets.BOOMI_PASSWORD }}
  
       
    steps:
     - name: SetVariables
       run: echo "The API key is:${{env.username}}"
    
     - name: AtomQuery
       id: myRequest
       uses: fjogeleit/http-request-action@master
       with:
        url: 'https://api.boomi.com/api/rest/v1/neosalpha-SSL1AK/PackagedComponent'
        method: 'POST'
        contentType: 'application/json'
        data: '{"QueryFilter" : {"expression" :{"argument" : ["ATOM"], "operator" : "EQUALS", "property" : "type"}}}'
        username: ${{env.BOOMI_USERNAME}}
        password: ${{env.BOOMI_PASSWORD}}
        
     - name: Show Response
       run: echo ${{ steps.myRequest.outputs.response }}
        
